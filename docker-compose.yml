version: '3.8'

services:
  # PostgreSQL 資料庫 (含 PostGIS)
  postgres:
    image: postgis/postgis:15-3.3
    container_name: tainan_address_db
    environment:
      POSTGRES_DB: tainan_addresses
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/sql:/docker-entrypoint-initdb.d
    networks:
      - tainan_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d tainan_addresses"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI 後端
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: tainan_address_api
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/tainan_addresses
      PROJECT_NAME: 臺南市門牌坐標查詢系統
      VERSION: 1.0.0
      DEBUG: true
      API_V1_STR: /api/v1
      BACKEND_CORS_ORIGINS: '["http://localhost:3000", "http://127.0.0.1:3000"]'
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./data:/app/data
      # UV 快取
      - uv_cache:/root/.cache/uv
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - tainan_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js 前端
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tainan_address_web
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000/api/v1
      NEXT_PUBLIC_MAP_DEFAULT_CENTER: "23.0,120.2"
      NEXT_PUBLIC_MAP_DEFAULT_ZOOM: "12"
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - tainan_network
    command: npm run dev

  # Redis (可選，用於快取)
  redis:
    image: redis:7-alpine
    container_name: tainan_address_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tainan_network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin (可選，資料庫管理工具)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: tainan_address_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - tainan_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  uv_cache:
    driver: local

networks:
  tainan_network:
    driver: bridge

